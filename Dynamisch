input_boolean:
  dynamisch_15_minuten:
    name: Dynamisch 15 Minuten
    icon: mdi:clock-time-three-outline

input_text:
  dynamisch_handmatige_periode:
    name: Dynamisch Handmatige Periode
    icon: mdi:clock-edit-outline
    max: 200
    mode: text

  dynamisch_handmatige_periode_morgen:
    name: Dynamisch Handmatige Periode Morgen
    icon: mdi:clock-edit-outline
    max: 200
    mode: text

input_number:
  dynamisch_minimale_spread:
    name: Dynamisch Minimale Spread
    icon: mdi:percent-box
    min: 0
    max: 100
    step: 1
    unit_of_measurement: '%'
    mode: box

  dynamisch_goedkoopste_x_periode:
    name: Dynamisch Goedkoopste X Periode
    icon: mdi:clock-edit-outline
    min: 0
    max: 96
    step: 1
    mode: box

  dynamisch_duurste_x_periode:
    name: Dynamisch Duurste X Periode
    icon: mdi:clock-edit-outline
    min: 0
    max: 96
    step: 1
    mode: box

  dynamisch_goedkoopste_x_periode_morgen:
    name: Dynamisch Goedkoopste X Periode Morgen
    icon: mdi:clock-edit-outline
    min: 0
    max: 96
    step: 1
    mode: box

  dynamisch_duurste_x_periode_morgen:
    name: Dynamisch Duurste X Periode Morgen
    icon: mdi:clock-edit-outline
    min: 0
    max: 96
    step: 1
    mode: box

template:
  - sensor:
      - name: "Dynamisch Nordpool"
        unique_id: dynamisch_nordpool
        unit_of_measurement: "â‚¬/kWh"
        state: >-
          {% set nordpool = 'sensor.<NORDPOOL>' %}
          {% set use_15_min = is_state('input_boolean.dynamisch_15_minuten', 'on') %}
          {% if use_15_min %}
            {% set data = state_attr(nordpool, 'raw_today') or [] %}
            {% set nowts = as_timestamp(now()) %}
            {% set current = namespace(val=None) %}
            {% for p in data %}
              {% set s = as_timestamp(as_datetime(p.start)) %}
              {% set e = as_timestamp(as_datetime(p.end)) %}
              {% if nowts >= s and nowts < e %}
                {% set current.val = (p.value) | round(5) %}
              {% endif %}
            {% endfor %}
            {{ current.val if current.val is not none else 'unknown' }}
          {% else %}
            {% set raw = state_attr(nordpool, 'raw_today') %}
            {% set now = now() %}
            {% if raw %}
              {% set current_hour_values = raw 
                | selectattr('start', '>=', now.replace(minute=0, second=0, microsecond=0)) 
                | selectattr('start', '<', now.replace(minute=0, second=0, microsecond=0) + timedelta(hours=1)) 
                | map(attribute='value') 
                | list %}
              {% if current_hour_values %}
                {{ (current_hour_values | sum / current_hour_values | count) | round(5) }}
              {% else %}
                {{ states(nordpool) }}
              {% endif %}
            {% else %}
              {{ states(nordpool) }}
            {% endif %}
          {% endif %}
        attributes:
          raw_today: >-
            {% set nordpool = 'sensor.<NORDPOOL>' %}
            {% set use_15_min = is_state('input_boolean.dynamisch_15_minuten', 'on') %}
            {% set raw = state_attr(nordpool, 'raw_today') %}
            {% if raw %}
              [
              {% if use_15_min %}
                {% for item in raw %}
                  {
                    "start": "{{ item.start.isoformat() }}",
                    "end": "{{ item.end.isoformat() }}",
                    "value": {{ item.value }}
                  }{% if not loop.last %},{% endif %}
                {% endfor %}
              {% else %}
                {% set hourly = raw | groupby('start.hour') %}
                {% for hour_group in hourly %}
                  {% set values = hour_group.list | map(attribute='value') | list %}
                  {% set hour_start = hour_group.list[0].start.replace(minute=0, second=0, microsecond=0) %}
                  {% set hour_end = hour_start + timedelta(hours=1) %}
                  {
                    "start": "{{ hour_start.isoformat() }}",
                    "end": "{{ hour_end.isoformat() }}",
                    "value": {{ (values | sum / values | count) | round(5) }}
                  }{% if not loop.last %},{% endif %}
                {% endfor %}
              {% endif %}
              ]
            {% else %}
              []
            {% endif %}
          raw_tomorrow: >-
            {% set nordpool = 'sensor.<NORDPOOL>' %}
            {% set use_15_min = is_state('input_boolean.dynamisch_15_minuten', 'on') %}
            {% set raw = state_attr(nordpool, 'raw_tomorrow') %}
            {% if raw %}
              [
              {% if use_15_min %}
                {% for item in raw %}
                  {
                    "start": "{{ item.start.isoformat() }}",
                    "end": "{{ item.end.isoformat() }}",
                    "value": {{ item.value }}
                  }{% if not loop.last %},{% endif %}
                {% endfor %}
              {% else %}
                {% set hourly = raw | groupby('start.hour') %}
                {% for hour_group in hourly %}
                  {% set values = hour_group.list | map(attribute='value') | list %}
                  {% set hour_start = hour_group.list[0].start.replace(minute=0, second=0, microsecond=0) %}
                  {% set hour_end = hour_start + timedelta(hours=1) %}
                  {
                    "start": "{{ hour_start.isoformat() }}",
                    "end": "{{ hour_end.isoformat() }}",
                    "value": {{ (values | sum / values | count) | round(5) }}
                  }{% if not loop.last %},{% endif %}
                {% endfor %}
              {% endif %}
              ]
            {% else %}
              []
            {% endif %}

      - name: "Dynamisch Spread Indicatie"
        unique_id: dynamisch_spread_indicatie
        icon: mdi:percent-box
        unit_of_measurement: "%"
        state: >
          {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
          {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
          {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
          {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
          
          {% if prijzen is iterable %}
            {% set ns = namespace(goedkoopste_uren=[], duurste_uren=[]) %}
            {% if handmatige | length > 0 %}
              {% for item in handmatige.split(';') %}
                {% set type = item[0] %}
                {% set tijd = item[1:] %}
                {% for uur in prijzen %}
                  {% set dt_start = uur.start | as_datetime %}
                  {% if dt_start.strftime('%H:%M') == tijd %}
                    {% if type == 'G' %}
                      {% set ns.goedkoopste_uren = ns.goedkoopste_uren + [uur] %}
                    {% elif type == 'D' %}
                      {% set ns.duurste_uren = ns.duurste_uren + [uur] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
              {% endfor %}
            {% else %}
              {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
              {% set ns.goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
              {% if aantal_duur > 0 %}
                {% set ns.duurste_uren = prijzen_per_uur[-aantal_duur:] %}
              {% else %}
                {% set goedkope_starttijden = ns.goedkoopste_uren | map(attribute='start') | list %}
                {% set ns.duurste_uren = prijzen | rejectattr('start', 'in', goedkope_starttijden) | list %}
              {% endif %}
            {% endif %}

            {% if ns.goedkoopste_uren | count > 0 and ns.duurste_uren | count > 0 %}
              {% set avg_goedkoop = ns.goedkoopste_uren | map(attribute='value') | sum / ns.goedkoopste_uren | count %}
              {% set avg_duur = ns.duurste_uren | map(attribute='value') | sum / ns.duurste_uren | count %}
              {% set spread_pct = ((avg_duur - avg_goedkoop) / avg_goedkoop) * 100 %}
              {{ spread_pct | round(1) }}
            {% else %}
              0
            {% endif %}
          {% else %}
            0
          {% endif %}
        attributes:
          handmatige_periode: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(goedkoopste=[], duurste=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkoopste = ns.goedkoopste + [(type ~ dt_start.strftime('%H:%M'))] %}
                      {% elif type == 'D' %}
                        {% set ns.duurste = ns.duurste + [(type ~ dt_start.strftime('%H:%M'))] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set dure_uren = prijzen_per_uur[-aantal_duur:] if aantal_duur > 0 else prijzen | rejectattr('start', 'in', goedkoopste_uren | map(attribute='start') | list) | list %}
                {% for uur in goedkoopste_uren %}
                  {% set tijd = uur.start | as_datetime %}
                  {% set ns.goedkoopste = ns.goedkoopste + ['G' ~ tijd.strftime('%H:%M')] %}
                {% endfor %}
                {% for uur in dure_uren %}
                  {% set tijd = uur.start | as_datetime %}
                  {% set ns.duurste = ns.duurste + ['D' ~ tijd.strftime('%H:%M')] %}
                {% endfor %}
              {% endif %}
              {{ (ns.duurste + ns.goedkoopste) | join(';') }}
            {% else %}
              ""
            {% endif %}
          goedkoopste_periode: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          duurste_periode: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkope_starttijden = prijzen_per_uur[:aantal_goedkoop] | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set ns.uren = prijzen | rejectattr('start', 'in', goedkope_starttijden) | list %}
                {% endif %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          gemiddelde_goedkoop: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          gemiddelde_duur: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkope_starttijden = prijzen_per_uur[:aantal_goedkoop] | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set ns.uren = prijzen | rejectattr('start', 'in', goedkope_starttijden) | list %}
                {% endif %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          spread_berekening: >
            (gemiddeld duur - goedkoop) / goedkoop Ã— 100

      - name: "Dynamisch Spread Indicatie NOM"
        unique_id: dynamisch_spread_indicatie_NOM
        icon: mdi:percent-box
        unit_of_measurement: "%"
        state: >
          {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
          {% set duurste_prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'duurste_na_eerste_goedkope') %}
          {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
          {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
          {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
          {% set ns = namespace(goedkoopste_uren=[], duurste_uren=[]) %}

          {% if prijzen is iterable and duurste_prijzen is iterable %}
            {% if handmatige | length > 0 %}
              {% for item in handmatige.split(';') %}
                {% set type = item[0] %}
                {% set tijd = item[1:] %}
                {% if type == 'G' %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% set ns.goedkoopste_uren = ns.goedkoopste_uren + [uur] %}
                    {% endif %}
                  {% endfor %}
                {% elif type == 'D' %}
                  {% for uur in duurste_prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% set ns.duurste_uren = ns.duurste_uren + [uur] %}
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endfor %}
            {% else %}
              {% set ns.goedkoopste_uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% set duurste_sorted = duurste_prijzen | sort(attribute='value', reverse=true) %}
              {% if aantal_duur > 0 %}
                {% set ns.duurste_uren = duurste_sorted[:aantal_duur] %}
              {% else %}
                {% set ns.duurste_uren = duurste_sorted %}
              {% endif %}
            {% endif %}

            {% if ns.goedkoopste_uren | count > 0 and ns.duurste_uren | count > 0 %}
              {% set avg_goedkoop = ns.goedkoopste_uren | map(attribute='value') | sum / ns.goedkoopste_uren | count %}
              {% set avg_duur = ns.duurste_uren | map(attribute='value') | sum / ns.duurste_uren | count %}
              {% set spread_pct = ((avg_duur - avg_goedkoop) / avg_goedkoop) * 100 %}
              {{ spread_pct | round(1) }}
            {% else %}
              0
            {% endif %}
          {% else %}
            0
          {% endif %}
        attributes:
          goedkoopste_uren: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}

            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          duurste_uren: >
            {% set duurste_prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'duurste_na_eerste_goedkope') %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}

            {% if duurste_prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in duurste_prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = duurste_prijzen | sort(attribute='value', reverse=true) %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = ns.uren[:aantal_duur] %}
                {% endif %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          gemiddelde_goedkoop: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}

            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          gemiddelde_duur: >
            {% set duurste_prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'duurste_na_eerste_goedkope') %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}

            {% if duurste_prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in duurste_prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = duurste_prijzen | sort(attribute='value', reverse=true) %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = ns.uren[:aantal_duur] %}
                {% endif %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          spread_berekening: >
            (gemiddeld duur - goedkoop) / goedkoop Ã— 100

      - name: "Dynamisch Spread Indicatie Morgen"
        unique_id: dynamisch_spread_indicatie_morgen
        icon: mdi:percent-box
        unit_of_measurement: "%"
        state: >
          {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
          {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
          {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
          {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
          
          {% if prijzen is iterable %}
            {% set ns = namespace(goedkoopste_uren=[], duurste_uren=[]) %}
            {% if handmatige | length > 0 %}
              {% for item in handmatige.split(';') %}
                {% set type = item[0] %}
                {% set tijd = item[1:] %}
                {% for uur in prijzen %}
                  {% set dt_start = uur.start | as_datetime %}
                  {% if dt_start.strftime('%H:%M') == tijd %}
                    {% if type == 'G' %}
                      {% set ns.goedkoopste_uren = ns.goedkoopste_uren + [uur] %}
                    {% elif type == 'D' %}
                      {% set ns.duurste_uren = ns.duurste_uren + [uur] %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
              {% endfor %}
            {% else %}
              {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
              {% set ns.goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
              {% if aantal_duur > 0 %}
                {% set ns.duurste_uren = prijzen_per_uur[-aantal_duur:] %}
              {% else %}
                {% set goedkope_starttijden = ns.goedkoopste_uren | map(attribute='start') | list %}
                {% set ns.duurste_uren = prijzen | rejectattr('start', 'in', goedkope_starttijden) | list %}
              {% endif %}
            {% endif %}
            {% if ns.goedkoopste_uren | count > 0 and ns.duurste_uren | count > 0 %}
              {% set avg_goedkoop = ns.goedkoopste_uren | map(attribute='value') | sum / ns.goedkoopste_uren | count %}
              {% set avg_duur = ns.duurste_uren | map(attribute='value') | sum / ns.duurste_uren | count %}
              {% set spread_pct = ((avg_duur - avg_goedkoop) / avg_goedkoop) * 100 %}
              {{ spread_pct | round(1) }}
            {% else %}
              0
            {% endif %}
          {% else %}
            0
          {% endif %}
        attributes:
          handmatige_periode: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(goedkoopste=[], duurste=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkoopste = ns.goedkoopste + ['G' ~ dt_start.strftime('%H:%M')] %}
                      {% elif type == 'D' %}
                        {% set ns.duurste = ns.duurste + ['D' ~ dt_start.strftime('%H:%M')] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set dure_uren = prijzen_per_uur[-aantal_duur:] if aantal_duur > 0 else prijzen | rejectattr('start', 'in', goedkoopste_uren | map(attribute='start') | list) | list %}
                {% for uur in goedkoopste_uren %}
                  {% set tijd = uur.start | as_datetime %}
                  {% set ns.goedkoopste = ns.goedkoopste + ['G' ~ tijd.strftime('%H:%M')] %}
                {% endfor %}
                {% for uur in dure_uren %}
                  {% set tijd = uur.start | as_datetime %}
                  {% set ns.duurste = ns.duurste + ['D' ~ tijd.strftime('%H:%M')] %}
                {% endfor %}
              {% endif %}
              {{ (ns.duurste + ns.goedkoopste) | join(';') }}
            {% else %}
              ""
            {% endif %}
          goedkoopste_periode: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          duurste_periode: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkope_starttijden = prijzen_per_uur[:aantal_goedkoop] | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set ns.uren = prijzen | rejectattr('start', 'in', goedkope_starttijden) | list %}
                {% endif %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          gemiddelde_goedkoop: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          gemiddelde_duur: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkope_starttijden = prijzen_per_uur[:aantal_goedkoop] | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set ns.uren = prijzen | rejectattr('start', 'in', goedkope_starttijden) | list %}
                {% endif %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          spread_berekening: >
            (gemiddeld duur - goedkoop) / goedkoop Ã— 100

      - name: "Dynamisch Spread Indicatie NOM Morgen"
        unique_id: dynamisch_spread_indicatie_nom_morgen
        icon: mdi:percent-box
        unit_of_measurement: "%"
        state: >
          {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
          {% set duurste_prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'duurste_na_eerste_goedkope_morgen') %}
          {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
          {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
          {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
          {% set ns = namespace(goedkoopste_uren=[], duurste_uren=[]) %}

          {% if prijzen is iterable and duurste_prijzen is iterable %}
            {% if handmatige | length > 0 %}
              {% for item in handmatige.split(';') %}
                {% set type = item[0] %}
                {% set tijd = item[1:] %}
                {% if type == 'G' %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% set ns.goedkoopste_uren = ns.goedkoopste_uren + [uur] %}
                    {% endif %}
                  {% endfor %}
                {% elif type == 'D' %}
                  {% for uur in duurste_prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% set ns.duurste_uren = ns.duurste_uren + [uur] %}
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endfor %}
            {% else %}
              {% set ns.goedkoopste_uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% set duurste_sorted = duurste_prijzen | sort(attribute='value', reverse=true) %}
              {% if aantal_duur > 0 %}
                {% set ns.duurste_uren = duurste_sorted[:aantal_duur] %}
              {% else %}
                {% set ns.duurste_uren = duurste_sorted %}
              {% endif %}
            {% endif %}

            {% if ns.goedkoopste_uren | count > 0 and ns.duurste_uren | count > 0 %}
              {% set avg_goedkoop = ns.goedkoopste_uren | map(attribute='value') | sum / ns.goedkoopste_uren | count %}
              {% set avg_duur = ns.duurste_uren | map(attribute='value') | sum / ns.duurste_uren | count %}
              {% set spread_pct = ((avg_duur - avg_goedkoop) / avg_goedkoop) * 100 %}
              {{ spread_pct | round(1) }}
            {% else %}
              0
            {% endif %}
          {% else %}
            0
          {% endif %}
        attributes:
          goedkoopste_periode: > 
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_tomorrow') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          duurste_periode: > 
            {% set duurste_prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'duurste_na_eerste_goedkope_morgen') %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if duurste_prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in duurste_prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = duurste_prijzen | sort(attribute='value', reverse=true) %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = ns.uren[:aantal_duur] %}
                {% endif %}
              {% endif %}
              [
              {% for uur in ns.uren %}
                "{{ (uur.start | as_datetime).strftime('%H:%M') }} - â‚¬{{ '%.4f' | format(uur.value) }}"
                {% if not loop.last %}, {% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
          gemiddelde_goedkoop: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set ns = namespace(uren=[]) %}
            {% if prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'G' %}
                    {% set tijd = item[1:] %}
                    {% for uur in prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = (prijzen | sort(attribute='value'))[:aantal_goedkoop] %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          gemiddelde_duur: > 
            {% set duurste_prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'duurste_na_eerste_goedkope_morgen') %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set ns = namespace(uren=[]) %}
            {% if duurste_prijzen is iterable %}
              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% if item[0] == 'D' %}
                    {% set tijd = item[1:] %}
                    {% for uur in duurste_prijzen %}
                      {% set dt_start = uur.start | as_datetime %}
                      {% if dt_start.strftime('%H:%M') == tijd %}
                        {% set ns.uren = ns.uren + [uur] %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% else %}
                {% set ns.uren = duurste_prijzen | sort(attribute='value', reverse=true) %}
                {% if aantal_duur > 0 %}
                  {% set ns.uren = ns.uren[:aantal_duur] %}
                {% endif %}
              {% endif %}
              {% if ns.uren | count > 0 %}
                {% set avg = ns.uren | map(attribute='value') | sum / ns.uren | count %}
                â‚¬{{ '%.4f' | format(avg) }}
              {% else %}
                n.v.t.
              {% endif %}
            {% else %}
              n.v.t.
            {% endif %}
          spread_berekening: >
            (gemiddeld duur - goedkoop) / goedkoop Ã— 100

      - name: "Dynamisch Duurste Periode"
        unique_id: dynamisch_duurste_periode
        icon: mdi:progress-clock
        state: >
          {% set prijzen = state_attr('sensor.dynamisch_nordpool', 'raw_today') %}
          {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
          {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
          {% if prijzen is iterable and aantal_duur > 0 %}
            {% set ns = namespace(dure_starttijden=[]) %}
            
            {% if handmatige | length > 0 %}
              {% for item in handmatige.split(';') %}
                {% set type = item[0] %}
                {% set tijd = item[1:] %}
                {% if type == 'D' %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% set ns.dure_starttijden = ns.dure_starttijden + [uur.start] %}
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endfor %}
            {% else %}
              {% set prijzen_sorted = prijzen | sort(attribute='value') %}
              {% set duurste_periodes = prijzen_sorted[-aantal_duur:] %}
              {% set ns.dure_starttijden = duurste_periodes | map(attribute='start') | list %}
            {% endif %}

            {% set nu = now().astimezone() %}
            {% set in_duur_blok = prijzen
              | selectattr('start', 'in', ns.dure_starttijden)
              | selectattr('start', 'le', nu.isoformat())
              | selectattr('end', 'gt', nu.isoformat())
              | list %}

            {% if in_duur_blok | length > 0 %}
              Ja
            {% else %}
              Nee
            {% endif %}
          {% else %}
            Onbekend
          {% endif %}
        attributes:
          raw_today: >
            {% set prijzen = state_attr('sensor.dynamisch_goedkoopste_periode', 'raw_today') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% if prijzen is iterable %}
              {% set ns = namespace(goedkope_starttijden=[], dure_starttijden=[]) %}

              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkope_starttijden = ns.goedkope_starttijden + [uur.start] %}
                      {% elif type == 'D' %}
                        {% set ns.dure_starttijden = ns.dure_starttijden + [uur.start] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set ns.goedkope_starttijden = goedkoopste_uren | map(attribute='start') | list %}

                {% if aantal_duur > 0 %}
                  {% set duurste_uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set duurste_uren = prijzen | rejectattr('start', 'in', ns.goedkope_starttijden) | list %}
                {% endif %}
                {% set ns.dure_starttijden = duurste_uren | map(attribute='start') | list %}
              {% endif %}

              [
              {% for uur in prijzen %}
                {
                  "start": "{{ uur.start }}",
                  "end": "{{ uur.end }}",
                  "value": {{ uur.value }},
                  "goedkoop": "{{ 'ja' if uur.start in ns.goedkope_starttijden else 'nee' }}",
                  "duur": "{{ 'ja' if uur.start in ns.dure_starttijden else 'nee' }}"
                }{% if not loop.last %},{% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}

      - name: "Dynamisch Goedkoopste Periode"
        unique_id: dynamisch_goedkoopste_periode
        icon: mdi:progress-clock
        state: >
          {% set prijzen = state_attr('sensor.dynamisch_nordpool', 'raw_today') %}
          {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
          {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
          {% set nu = now().astimezone() %}

          {% if prijzen is iterable %}
            {% set ns = namespace(goedkope_starttijden=[]) %}

            {% if handmatige | length > 0 %}
              {% for item in handmatige.split(';') %}
                {% set type = item[0] %}
                {% set tijd = item[1:] %}
                {% if type == 'G' %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% set ns.goedkope_starttijden = ns.goedkope_starttijden + [uur.start] %}
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endfor %}
            {% else %}
              {% set prijzen_sorted = prijzen | sort(attribute='value') %}
              {% set goedkoopste_periodes = prijzen_sorted[:aantal_goedkoop] %}
              {% set ns.goedkope_starttijden = goedkoopste_periodes | map(attribute='start') | list %}
            {% endif %}

            {% set in_goedkoop_blok = prijzen 
              | selectattr('start', 'in', ns.goedkope_starttijden) 
              | selectattr('start', 'le', nu.isoformat()) 
              | selectattr('end', 'gt', nu.isoformat()) 
              | list %}

            {% if in_goedkoop_blok | length > 0 %}
              Ja
            {% else %}
              Nee
            {% endif %}
          {% else %}
            Onbekend
          {% endif %}
        attributes:
          raw_today: >
            {% set prijzen = state_attr('sensor.dynamisch_nordpool', 'raw_today') %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}

            {% if prijzen is iterable %}
              {% set ns = namespace(goedkope_starttijden=[], dure_starttijden=[]) %}

              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkope_starttijden = ns.goedkope_starttijden + [uur.start] %}
                      {% elif type == 'D' %}
                        {% set ns.dure_starttijden = ns.dure_starttijden + [uur.start] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set ns.goedkope_starttijden = goedkoopste_uren | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set duurste_uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set duurste_uren = prijzen | rejectattr('start', 'in', ns.goedkope_starttijden) | list %}
                {% endif %}
                {% set ns.dure_starttijden = duurste_uren | map(attribute='start') | list %}
              {% endif %}

              [
              {% for uur in prijzen %}
                {
                  "start": "{{ uur.start }}",
                  "end": "{{ uur.end }}",
                  "value": {{ uur.value }},
                  "goedkoop": "{{ 'ja' if uur.start in ns.goedkope_starttijden else 'nee' }}",
                  "duur": "{{ 'ja' if uur.start in ns.dure_starttijden else 'nee' }}"
                }{% if not loop.last %},{% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}

          raw_tomorrow: >
            {% set prijzen = state_attr('sensor.dynamisch_nordpool', 'raw_tomorrow') %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}

            {% if prijzen is iterable %}
              {% set ns = namespace(goedkope_starttijden=[], dure_starttijden=[]) %}

              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkope_starttijden = ns.goedkope_starttijden + [uur.start] %}
                      {% elif type == 'D' %}
                        {% set ns.dure_starttijden = ns.dure_starttijden + [uur.start] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set ns.goedkope_starttijden = goedkoopste_uren | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set duurste_uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set duurste_uren = prijzen | rejectattr('start', 'in', ns.goedkope_starttijden) | list %}
                {% endif %}
                {% set ns.dure_starttijden = duurste_uren | map(attribute='start') | list %}
              {% endif %}

              [
              {% for uur in prijzen %}
                {
                  "start": "{{ uur.start }}",
                  "end": "{{ uur.end }}",
                  "value": {{ uur.value }},
                  "goedkoop": "{{ 'ja' if uur.start in ns.goedkope_starttijden else 'nee' }}",
                  "duur": "{{ 'ja' if uur.start in ns.dure_starttijden else 'nee' }}"
                }{% if not loop.last %},{% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}

          duurste_na_eerste_goedkope: >
            {% set prijzen = state_attr('sensor.dynamisch_nordpool', 'raw_today') %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode') | int %}

            {% if prijzen is iterable %}
              {% set ns = namespace(goedkope_starttijden=[], dure_starttijden=[]) %}

              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkope_starttijden = ns.goedkope_starttijden + [uur.start] %}
                      {% elif type == 'D' %}
                        {% set ns.dure_starttijden = ns.dure_starttijden + [uur.start] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set ns.goedkope_starttijden = goedkoopste_uren | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set duurste_uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set duurste_uren = prijzen | rejectattr('start', 'in', ns.goedkope_starttijden) | list %}
                {% endif %}
                {% set ns.dure_starttijden = duurste_uren | map(attribute='start') | list %}
              {% endif %}

              {% set eerste_goedkoop = ns.goedkope_starttijden | map('as_datetime') | sort | first %}

              [
              {% for uur in prijzen if uur.start in ns.dure_starttijden and (uur.start | as_datetime > eerste_goedkoop) %}
                {
                  "start": "{{ uur.start }}",
                  "end": "{{ uur.end }}",
                  "value": {{ uur.value }},
                  "goedkoop": "{{ 'ja' if uur.start in ns.goedkope_starttijden else 'nee' }}",
                  "duur": "ja"
                }{% if not loop.last %},{% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}

          duurste_na_eerste_goedkope_morgen: >
            {% set prijzen = state_attr('sensor.dynamisch_nordpool', 'raw_tomorrow') %}
            {% set handmatige = states('input_text.dynamisch_handmatige_periode_morgen') %}
            {% set aantal_goedkoop = states('input_number.dynamisch_goedkoopste_x_periode_morgen') | int %}
            {% set aantal_duur = states('input_number.dynamisch_duurste_x_periode_morgen') | int %}

            {% if prijzen is iterable %}
              {% set ns = namespace(goedkope_starttijden=[], dure_starttijden=[]) %}

              {% if handmatige | length > 0 %}
                {% for item in handmatige.split(';') %}
                  {% set type = item[0] %}
                  {% set tijd = item[1:] %}
                  {% for uur in prijzen %}
                    {% set dt_start = uur.start | as_datetime %}
                    {% if dt_start.strftime('%H:%M') == tijd %}
                      {% if type == 'G' %}
                        {% set ns.goedkope_starttijden = ns.goedkope_starttijden + [uur.start] %}
                      {% elif type == 'D' %}
                        {% set ns.dure_starttijden = ns.dure_starttijden + [uur.start] %}
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              {% else %}
                {% set prijzen_per_uur = prijzen | sort(attribute='value') %}
                {% set goedkoopste_uren = prijzen_per_uur[:aantal_goedkoop] %}
                {% set ns.goedkope_starttijden = goedkoopste_uren | map(attribute='start') | list %}
                {% if aantal_duur > 0 %}
                  {% set duurste_uren = prijzen_per_uur[-aantal_duur:] %}
                {% else %}
                  {% set duurste_uren = prijzen | rejectattr('start', 'in', ns.goedkope_starttijden) | list %}
                {% endif %}
                {% set ns.dure_starttijden = duurste_uren | map(attribute='start') | list %}
              {% endif %}

              {% set eerste_goedkoop = ns.goedkope_starttijden | map('as_datetime') | sort | first %}

              [
              {% for uur in prijzen if uur.start in ns.dure_starttijden and (uur.start | as_datetime > eerste_goedkoop) %}
                {
                  "start": "{{ uur.start }}",
                  "end": "{{ uur.end }}",
                  "value": {{ uur.value }},
                  "goedkoop": "{{ 'ja' if uur.start in ns.goedkope_starttijden else 'nee' }}",
                  "duur": "ja"
                }{% if not loop.last %},{% endif %}
              {% endfor %}
              ]
            {% else %}
              []
            {% endif %}
